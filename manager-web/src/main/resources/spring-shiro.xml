<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

<description>Shiro Configuration</description>

    <!-- Shiro's main business-tier object for web-enabled applications -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realms">
            <list>
                <ref bean="statelessRealm" />
            </list>
        </property>

        <!--<property name="subjectFactory" ref="subjectFactory" />-->
        <property name="sessionManager" ref="sessionManager" />
    </bean>

    <!-- 項目自定义的Realm -->
    <bean id="statelessRealm" class="com.hesheng.shiro.realm.StatelessRealm">
        <property name="cachingEnabled" value="false" />
    </bean>


    <bean id="statelessAuthcFilter" class="com.hesheng.auth.YCStatelessAuthcFilter">
        <property name="sysid" value="ipu" />
        <property name="tokenFactory" ref="tokenFactory" />
    </bean>

    <!-- Shiro Filter -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager" />
        <property name="loginUrl" value="/tologin" />
        <property name="successUrl" value="/loginsuccess.jhtml" />
        <property name="unauthorizedUrl" value="/error.jhtml" />
        <property name="filters">
            <util:map>
                <entry key="statelessAuthc" value-ref="statelessAuthcFilter" />
            </util:map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /jsp/** = anon
                /ycctrl/** = statelessAuthc
                /css/** = anon
                /img/** = anon
                /js/** = anon
                /SSO/** = anon
                /login = anon
                /hs/** = anon
                /ad/** = anon
                /**= statelessAuthc
            </value>
        </property>
    </bean>

    <!-- 用户授权信息Cache -->
    <bean id="sessionManager" class="org.apache.shiro.session.mgt.DefaultSessionManager">
        <property name="sessionValidationSchedulerEnabled" value="false" />
    </bean>

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

    <!-- AOP式方法级权限检查 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true" />
    </bean>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager" />
    </bean>


    <bean id="tokenFactory" class="com.hesheng.auth.token.TokenFactory">
        <property name="processors">
            <list>
                <ref bean="webTokenProcessor" />
                <!--<ref bean="maTokenProcessor" />-->

            </list>
        </property>
    </bean>

    <bean id="webTokenProcessor" class="com.hesheng.auth.token.DefaultTokenPorcessor">
        <property name="id" value="web"></property>

        <property name="path" value="/"></property>
        <property name="hashIterations" value="1024"></property>
        <property name="expr" value="3600"></property>
        <property name="exacts">
            <list>
                <value type="java.lang.String">tenantid</value>
            </list>
        </property>
    </bean>

    <bean id="sessionMgr" class="com.hesheng.auth.session.SessionManager">
        <property name="sessionJedisPool" ref="sessionJedisPool"/>
        <property name="sessionMutex" value="false"/>
    </bean>

    <bean id="sessionJedisPool" class="com.hesh.utils.RedisPoolFactory" scope="prototype" factory-method="createJedisPool">
        <constructor-arg value="${redis.session.url}" />
    </bean>

</beans>